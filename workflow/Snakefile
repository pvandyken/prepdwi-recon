"""Prepdwi_recon


"""
from snakebids import bids, generate_inputs
import groups

configfile: 'config/config.yml'

###
# Input Globals
###
inputs = generate_inputs(
    bids_dir=config['bids_dir'],
    pybids_inputs=config['pybids_inputs'],
    derivatives=config['preprocessed_data']
)

wildcards = inputs['input_wildcards']['preproc_dwi']
input_paths = inputs['input_path']

###
# Output Globals
###
work = "tmp"
qc = config['output_dir'] + "/qc"
output = config['output_dir']

###
# Inclusions
###
include: 'rules/anatomical_segmentation.smk'
include: "rules/response_function.smk"
include: 'rules/reconstruction.smk'
include: 'rules/spectral_clustering.smk'
#include: "rules/qc.smk"

###
# Top level Rules
###
localrules: all, qc

rule all:
    input:
        expand(
            rules.assign_to_anatomical_tracts.output,
            **inputs['input_lists']['preproc_dwi']
        )

rule tractography:
    input:
        expand(
            bids(root=output,
                datatype='dwi',
                desc="sift",
                suffix='weights.txt',
                **wildcards),
            **inputs['input_lists']['preproc_dwi']
        )

# rule qc:
#     input:
#         expand(
#             bids(root=qc,
#                 datatype='dwi',
#                 suffix='{suffixes}',
#                 **wildcards),
#             **inputs['input_lists']['preproc_dwi'],
#             suffixes=["viewTractography", "viewOdf", "viewInterface"]),
#         expand(
#             rules.create_tractography_png.output,
#             **inputs['input_lists']['preproc_dwi'])
